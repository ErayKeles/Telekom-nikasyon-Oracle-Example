-- 1. CUSTOMERS Tablosu
CREATE TABLE CUSTOMERS (
    CUSTOMER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(100) UNIQUE NOT NULL,
    PHONE_NUMBER VARCHAR2(15) UNIQUE NOT NULL,
    ADDRESS VARCHAR2(255),
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR2(15) CHECK (STATUS IN ('Active', 'Inactive')) DEFAULT 'Active'
);

-- 2. CALL_RECORDS Tablosu
CREATE TABLE CALL_RECORDS (
    CALL_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    CALL_START TIMESTAMP NOT NULL,
    CALL_END TIMESTAMP NOT NULL,
    DURATION NUMBER,
    CALL_TYPE VARCHAR2(10) CHECK (CALL_TYPE IN ('Incoming', 'Outgoing')),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

-- 3. INVOICES Tablosu
CREATE TABLE INVOICES (
    INVOICE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    INVOICE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    AMOUNT NUMBER NOT NULL,
    STATUS VARCHAR2(15) CHECK (STATUS IN ('Paid', 'Pending', 'Overdue')) DEFAULT 'Pending',
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

-- 4. PLANS Tablosu
CREATE TABLE PLANS (
    PLAN_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PLAN_NAME VARCHAR2(100) NOT NULL,
    MONTHLY_FEE NUMBER NOT NULL,
    DATA_LIMIT NUMBER,
    CALL_LIMIT NUMBER,
    STATUS VARCHAR2(15) CHECK (STATUS IN ('Active', 'Inactive')) DEFAULT 'Active'
);

-- 5. CUSTOMER_PLANS Tablosu
CREATE TABLE CUSTOMER_PLANS (
    CUSTOMER_PLAN_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    PLAN_ID NUMBER NOT NULL,
    START_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    END_DATE TIMESTAMP,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
    FOREIGN KEY (PLAN_ID) REFERENCES PLANS(PLAN_ID)
);

-- 6. PAYMENTS Tablosu
CREATE TABLE PAYMENTS (
    PAYMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    INVOICE_ID NUMBER NOT NULL,
    PAYMENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    AMOUNT NUMBER NOT NULL,
    PAYMENT_METHOD VARCHAR2(50),
    FOREIGN KEY (INVOICE_ID) REFERENCES INVOICES(INVOICE_ID)
);

-- 7. EQUIPMENT Tablosu
CREATE TABLE EQUIPMENT (
    EQUIPMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    EQUIPMENT_TYPE VARCHAR2(100) NOT NULL,
    PURCHASE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR2(15) CHECK (STATUS IN ('Active', 'Inactive')) DEFAULT 'Active',
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

-- 8. TECHNICIANS Tablosu
CREATE TABLE TECHNICIANS (
    TECHNICIAN_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    CONTACT_NUMBER VARCHAR2(15),
    EMAIL VARCHAR2(100)
);

-- 9. SERVICE_TICKETS Tablosu
CREATE TABLE SERVICE_TICKETS (
    TICKET_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    ISSUE_DESCRIPTION VARCHAR2(500) NOT NULL,
    TICKET_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR2(15) CHECK (STATUS IN ('Open', 'In Progress', 'Resolved', 'Closed')) DEFAULT 'Open',
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

-- 10. COMPLAINTS Tablosu
CREATE TABLE COMPLAINTS (
    COMPLAINT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    COMPLAINT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DESCRIPTION VARCHAR2(500) NOT NULL,
    STATUS VARCHAR2(15) CHECK (STATUS IN ('Pending', 'Resolved')) DEFAULT 'Pending',
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

-- 11. CUSTOMER_FEEDBACK Tablosu
CREATE TABLE CUSTOMER_FEEDBACK (
    FEEDBACK_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    FEEDBACK_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    RATING NUMBER CHECK (RATING BETWEEN 1 AND 5),
    COMMENTS VARCHAR2(500),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

-- 12. USAGE_METRICS Tablosu
CREATE TABLE USAGE_METRICS (
    USAGE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    USAGE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DATA_USAGE NUMBER,
    CALL_DURATION NUMBER,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

-- 13. REFERRAL_PROGRAMS Tablosu
CREATE TABLE REFERRAL_PROGRAMS (
    REFERRAL_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    REFERRER_ID NUMBER NOT NULL,
    REFERRED_CUSTOMER_ID NUMBER,
    REFERRAL_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR2(15) CHECK (STATUS IN ('Active', 'Used', 'Expired')) DEFAULT 'Active',
    FOREIGN KEY (REFERRER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
    FOREIGN KEY (REFERRED_CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

-- 14. PROMOTIONS Tablosu
CREATE TABLE PROMOTIONS (
    PROMOTION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PROMOTION_NAME VARCHAR2(100) NOT NULL,
    DISCOUNT_RATE NUMBER CHECK (DISCOUNT_RATE BETWEEN 0 AND 100),
    START_DATE TIMESTAMP NOT NULL,
    END_DATE TIMESTAMP NOT NULL
);

-- 15. PROMOTION_APPLICATIONS Tablosu
CREATE TABLE PROMOTION_APPLICATIONS (
    APPLICATION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    PROMOTION_ID NUMBER NOT NULL,
    APPLICATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR2(15) CHECK (STATUS IN ('Applied', 'Accepted', 'Rejected')) DEFAULT 'Applied',
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
    FOREIGN KEY (PROMOTION_ID) REFERENCES PROMOTIONS(PROMOTION_ID)
);

-- 16. ANNOUNCEMENTS Tablosu
CREATE TABLE ANNOUNCEMENTS (
    ANNOUNCEMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TITLE VARCHAR2(100) NOT NULL,
    CONTENT VARCHAR2(500) NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR2(15) CHECK (STATUS IN ('Active', 'Inactive')) DEFAULT 'Active'
);

-- 17. SERVICE_PROVIDERS Tablosu
CREATE TABLE SERVICE_PROVIDERS (
    PROVIDER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PROVIDER_NAME VARCHAR2(100) NOT NULL,
    CONTACT_NUMBER VARCHAR2(15),
    EMAIL VARCHAR2(100)
);

-- 18. PARTNERS Tablosu
CREATE TABLE PARTNERS (
    PARTNER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PARTNER_NAME VARCHAR2(100) NOT NULL,
    CONTACT_INFO VARCHAR2(255)
);

-- 19. EVENTS Tablosu
CREATE TABLE EVENTS (
    EVENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EVENT_NAME VARCHAR2(100) NOT NULL,
    EVENT_DATE TIMESTAMP NOT NULL,
    LOCATION VARCHAR2(255),
    DESCRIPTION VARCHAR2(500)
);

-- 20. SUBSCRIPTIONS Tablosu
CREATE TABLE SUBSCRIPTIONS (
    SUBSCRIPTION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_ID NUMBER NOT NULL,
    SERVICE_PROVIDER_ID NUMBER NOT NULL,
    START_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    END_DATE TIMESTAMP,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
    FOREIGN KEY (SERVICE_PROVIDER_ID) REFERENCES SERVICE_PROVIDERS(PROVIDER_ID)
);
